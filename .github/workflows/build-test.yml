name: Build & test

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "**.pyi?"
      - "**.rs"
      - "Cargo.*"
      - "pyproject.toml"
      - "README.md"
  push:
    branches:
      - "*"
    paths:
      - "**.pyi?"
      - "**.rs"
      - "Cargo.*"
      - "pyproject.toml"
      - "README.md"
  workflow_call:
    inputs:
      release:
        type: boolean
        description: Build for release
        default: false
    outputs:
      run_id:
        description: Workflow run ID
        value: ${{ jobs.output_run_id.outputs.run_id }}

env:
  # If this workflow is called to build for release, build using
  # release profile.
  build_profile: ${{ inputs.release && 'release' || 'dev' }}

jobs:
  linux:
    name: Build & test on Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
        # If this workflow is called to build for release, build using
        # only one Python version, which is the lowest ABI version set
        # in PyO3 features.
        py: ${{ inputs.release && fromJSON('["3.8"]') || fromJSON('["3.8", "3.12"]') }}
    env:
      DISPLAY: :0
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
      - name: Install test dependencies
        run:  sudo apt-get update & sudo apt-get install -y xvfb xsel
      - name: Run virtual X11 server
        run: Xvfb :0 -screen 0 800x600x16 &
      - name: Setup venv
        run: python -m venv .venv
      - name: Build extension module
        uses: PyO3/maturin-action@v1
        with:
          command: build
          target: ${{ matrix.target }}
          args: --profile ${{ env.build_profile }} --out dist
      - name: Install package
        run: |
          source .venv/bin/activate
          pip install dist/*
      - name: Run tests
        run: |
          source .venv/bin/activate
          python -m unittest -v
      - name: Update build artifact
        if: ${{ inputs.release }}
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist/wheels

  windows:
    name: Build & test on Windows
    runs-on: windows-latest
    strategy:
      matrix:
        # If this workflow is called to build for release, build using
        # only one Python version, which is the lowest ABI version set
        # in PyO3 features.
        py: ${{ inputs.release && fromJSON('["3.8"]') || fromJSON('["3.8", "3.12"]') }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
      - name: Setup venv
        run: python -m venv .venv
      - name: Build extension module
        uses: PyO3/maturin-action@v1
        with:
          command: build
          target: x64
          args: --profile ${{ env.build_profile }} --out dist
      - name: Install package
        shell: powershell
        run: |
          .venv/Scripts/activate.ps1
          pip install dist/*
      - name: Run tests
        shell: powershell
        run: |
          .venv/Scripts/activate.ps1
          python -m unittest -v
      - name: Update build artifact
        if: ${{ inputs.release }}
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist

  macos:
    name: Build & test on MacOS
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
        # If this workflow is called to build for release, build using
        # only one Python version, which is the lowest ABI version set
        # in PyO3 features.
        py: ${{ inputs.release && fromJSON('["3.8"]') || fromJSON('["3.8", "3.12"]') }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
      - name: Setup venv
        run: python -m venv .venv
      - name: Build extension module
        uses: PyO3/maturin-action@v1
        with:
          command: build
          target: ${{ matrix.target }}
          args: --profile ${{ env.build_profile }} --out dist
      - name: Install package
        run: |
          source .venv/bin/activate
          pip install dist/*
      - name: Run tests
        run: |
          source .venv/bin/activate
          python -m unittest -v
      - name: Update build artifact
        if: ${{ inputs.release }}
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist

  output_run_id:
    name: Export workflow run ID to the caller
    if: ${{ inputs.release }}
    runs-on: ubuntu-latest
    env:
      RUN_ID: ${{ github.run_id }}
    outputs:
      run_id: ${{ steps.export.outputs.run_id }}
    steps:
      - id: export
        run: echo "run_id=$RUN_ID" >> $GITHUB_OUTPUT
